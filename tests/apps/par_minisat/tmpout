PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 2
PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 1
==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLE==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARPARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 0
L[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: lALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 3
]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[0] to process 0, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[0] to process 1, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[0] to process 3, which contains 3 literals (16 bytes)
PARALLEL[2]: DONE sending out my 1 learnts.
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[1] to process 0, which contains 4 literals (20 bytes)
PARALLEL[2] sending out learnts[1] to process 1, which contains 4 literals (20 bytes)
PARALLEL[2] sending out learnts[1] to process 3, which contains 4 literals (20 bytes)
PARALLEL[2]: DONE sending out my 2 learnts.
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[2] to process 0, which contains 9 literals (40 bytes)
PARALLEL[2] sending out learnts[2] to process 1, which contains 9 literals (40 bytes)
PARALLEL[2] sending out learnts[2] to process 3, which contains 9 literals (40 bytes)
PARALLEL[2]: DONE sending out my 3 learnts.
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[3] to process 0, which contains 4 literals (20 bytes)
PARALLEL[2] sending out learnts[3] to process 1, which contains 4 literals (20 bytes)
PARALLEL[2] sending out learnts[3] to process 3, which contains 4 literals (20 bytes)
PARALLEL[2]: DONE sending out my 4 learnts.
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[4] to process 0, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[4] to process 1, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[4] to process 3, which contains 3 literals (16 bytes)
PARALLEL[2]: DONE sending out my 5 learnts.
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[5] to process 0, which contains 9 literals (40 bytes)
PARALLEL[2] sending out learnts[5] to process 1, which contains 9 literals (40 bytes)
PARALLEL[2] sending out learnts[5] to process 3, which contains 9 literals (40 bytes)
PARALLEL[2]: DONE sending out my 6 learnts.
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLE==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[0]: learnts.size()=0
L[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.sPARALLEL[0]: learnts.size()=0
PARALLEL[0]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 16 from process 2 (1 so far this time)
PARALLEL[0]: learnts.size()=1
PARALLEL[0]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[0]: learnts.size()=2
PARALLEL[0]: there is a learnt of size 40 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 40 from process 2 (1 so far this time)
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 16 from process 2 (1 so far this time)
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: there is a learnt of size 40 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 40 from process 2 (1 so far this time)
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PAize()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
RALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: there is a learnt of size 20 bytes to receive from process 0
earnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: there is a learnt of size 20 bytes to receive from process 0
PARALLEL[1]: Done receiving one learnts of size 20 from process 0 (1 so far this time)
PARALLEL[1]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 16 from process 2 (2 so far this time)
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=3
PARALLEL[1]: there is a learnt of size 40 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 40 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=5
PARALLEL[1]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 16 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=6
PARALLEL[1]: there is a learnt of size 40 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 40 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALPARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: I have 1 learnts to send out to everyone now...
PARALLEL[0] sending out learnts[6] to process 1, which contains 4 literals (20 bytes)
PARALLEL[0] sending out learnts[6] to process 2, which contains 4 literals (20 bytes)
PARALLEL[0] sending out learnts[6] to process 3, which contains 4 literals (20 bytes)
PARALLEL[0]: DONE sending out my 7 learnts.
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]:LEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: I have 1 learnts to send out to everyone now...
PARALLEL[1] sending out learnts[7] to process 0, which contains 8 literals (36 bytes)
PARALLEL[1] sending out learnts[7] to process 2, which contains 8 literals (36 bytes)
PARALLEL[1] sending out learnts[7] to process 3, which contains 8 literals (36 bytes)
PARALLEL[1]: DONE sending out my 8 learnts.
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[3]: learnts.size()=0
PARALLEL[3]: learnts.size()=0
PARALLEL[3]: there is a learnt of size 20 bytes to receive from process 0
PARALLEL[3]: Done receiving one learnts of size 20 from process 0 (1 so far this time)
PARALLEL[3]: there is a learnt of size 36 bytes to receive from process 1
PARALLEL[3]: Done receiving one learnts of size 36 from process 1 (2 so far this time)
PARALLEL[3]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 16 from process 2 (3 so far this time)
PARALLEL[3]: learnts.size()=3
PARALLEL[3]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: there is a learnt of size 40 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 40 from process 2 (1 so far this time)
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 16 from process 2 (1 so far this time)
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: there is a learnt of size 40 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 40 from process 2 (1 so far this time)
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALPARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLELLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]:[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: le3 additional processes aborted (not shown)
