PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 1
PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 3
PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 2
==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[1]: learnts.size()=0
==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL: Initialed MPI
PARALLEL: Hello from MPI rank 0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=0
PARALLEL[1]: learnts.size()=1
PARALLEL[1]: I have 1 learnts to send out to everyone now...
PARALLEL[1] sending out learnts[0] to process 0, which contains 3 literals (16 bytes)
PARALLEL[1] sending out learnts[0] to process 2, which contains 3 literals (16 bytes)
PARALLEL[1] sending out learnts[0] to process 3, which contains 3 literals (16 bytes)
PARALLEL[1]: DONE sending out my 1 learnts.
PARALLEL[1]: learnts.size()=1
PARALLEL[1]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 16 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.size()=2
PARALLEL[1]: learnts.sizPARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=0
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[0] to process 0, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[0] to process 1, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[0] to process 3, which contains 3 literals (16 bytes)
PARALLEL[2]: DONE sending out my 1 learnts.
PARALLEL[2]: learnts.size()=1
PARALLEL[2]: there is a learnt of size 16 bytes to receive from process 1
PARALLEL[2]: Done receiving one learnts of size 16 from process 1 (1 so far this time)
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=2
PARALLEL[2]: learnts.size()=3
PARALLEL[1]: I have 1 learnts to send out to everyone now...
PARALLEL[1] sending out learnts[2] to process 0, which contains 4 literals (20 bytes)
PARALLEL[1] sending out learnts[2] to process 2, which contains 4 literals (20 bytes)
PARALLEL[1] sending out learnts[2] to process 3, which contains 4 literals (20 bytes)
PARALLEL[1]: DONE sending out my 3 learnts.
PARALLEL[1]: learnts.size()=3
PARALLEL[1]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 20 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: leare()=2
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[2] to process 0, which contains 4 literals (20 bytes)
PARALLEL[2] sending out learnts[2] to process 1, which contains 4 literals (20 bytes)
PARALLEL[2] sending out learnts[2] to process 3, which contains 4 literals (20 bytes)
PARALLEL[2]: DONE sending out my 3 learnts.
PARALLEL[2]: learnts.size()=3
PARALLEL[2]: there is a learnt of size 20 bytes to receive from process 1
PARALLEL[2]: Done receiving one learnts of size 20 from process 1 (1 so far this time)
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: lear==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[3]: learnts.size()=0
PARALLEL[3]: learnts.size()=0
PARALLEL[3]: there is a learnt of size 16 bytes to receive from process 1
PARALLEL[3]: Done receiving one learnts of size 16 from process 1 (1 so far this time)
PARALLEL[3]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 16 from process 2 (2 so far this time)
PARALLEL[3]: learnts.size()=2
PARALLEL[3]: there is a learnt of size 20 bytes to receive from process 1
PARALLEL[3]: Done receiving one learnts of size 20 from process 1 (1 so far this time)
PARALLEL[3]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[3]: Done receiving one learnts of size 20 from process 2 (2 so far this time)
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
==================================[MINISAT]===================================
| Conflicts |     ORIGINAL     |              LEARNT              | Progress |
|           | Clauses Literals |   Limit Clauses Literals  Lit/Cl |          |
==============================================================================
|         0 |    6997    18188 |    2332       0        0     nan |  0.000 % |
PARALLEL[0]: learnts.size()=0
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[0]: there is a learnt of size 16 bytes to receive from process 1
PARALLEL[0]: Done receiving one learnts of size 16 from process 1 (1 so far this time)
PARALLEL[0]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 16 from process 2 (2 so far this time)
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[0]: learnts.size()=1
PARALLEL[0]: there is a learnt of size 20 bytes to receive from process 1
PARALLEL[0]: Done receiving one learnts of size 20 from process 1 (1 so far this time)
PARALLEL[0]: there is a learnt of size 20 bytes to receive from process 2
PARALLEL[0]: Done receiving one learnts of size 20 from process 2 (2 so far this time)
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=4
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: I have 1 learnts to send out to everyone now...
PARALLEL[3] sending out learnts[4] to process 0, which contains 7 literals (32 bytes)
PARALLEL[3] sending out learnts[4] to process 1, which contains 7 literals (32 bytes)
PARALLEL[3] sending out learnts[4] to process 2, which contains 7 literals (32 bytes)
PARALLEL[3]: DONE sending out my 5 learnts.
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: learnts.size()=3
PARALLEL[0]: there is a learnt of size 32 bytes to receive from process 3
PARALLEL[0]: Done receiving one learnts of size 32 from process 3 (1 so far this time)
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=5
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: I have 1 learnts to send out to everyone now...
PARALLEL[3] sending out learnts[5] to process 0, which contains 4 literals (20 bytes)
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: learnts.size()=4
PARALLEL[0]: there is a learnt of size 20 bytes to receive from process 3
PARALLEL[0]: Done receiving one learnts of size 20 from process 3 (1 so far this time)
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[3] sending out learnts[5] to process 1, which contains 4 literals (20 bytes)
PARALLEL[3] sending out learnts[5] to process 2, which contains 4 literals (20 bytes)
PARALLEL[3]: DONE sending out my 6 learnts.
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=6
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: I have 1 learnts to send out to everyone now...
PARALLEL[3] sending out learnts[6] to process 0, which contains 6 literals (28 bytes)
PARALLEL[3] sending out learnts[6] to process 1, which contains 6 literals (28 bytes)
PARALLEL[3] sending out learnts[6] to process 2, which contains 6 literals (28 bytes)
PARALLEL[3]: DONE sending out my 7 learnts.
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: learnts.size()=5
PARALLEL[0]: there is a learnt of size 28 bytes to receive from process 3
PARALLEL[0]: Done receiving one learnts of size 28 from process 3 (1 so far this time)
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: learnts.size()=6
PARALLEL[0]: there is a learnt of size 32 bytes to receive from process 3
PARALLEL[0]: Done receiving one learnts of size 32 from process 3 (1 so far this time)
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=7
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: I have 1 learnts to send out to everyone now...
PARALLEL[3] sending out learnts[7] to process 0, which contains 7 literals (32 bytes)
PARALLEL[3] sending out learnts[7] to process 1, which contains 7 literals (32 bytes)
PARALLEL[3] sending out learnts[7] to process 2, which contains 7 literals (32 bytes)
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[3]: DONE sending out my 8 learnts.
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=7
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=8
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: I have 1 learnts to send out to everyone now...
PARALLEL[3] sending out learnts[8] to process 0, which contains 6 literals (28 bytes)
PARALLEL[3] sending out learnts[8] to process 1, which contains 6 literals (28 bytes)
PARALLEL[3] sending out learnts[8] to process 2, which contains 6 literals (28 bytes)
PARALLEL[3]: DONE sending out my 9 learnts.
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: learnts.size()=8
PARALLEL[0]: there is a learnt of size 28 bytes to receive from process 3
PARALLEL[0]: Done receiving one learnts of size 28 from process 3 (1 so far this time)
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLELPARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[0]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[3]: learnts.size()=9
PARALLEL[777]: learnts.size()=9
==============================================================================
PARALLEL[777]: learnts.size()=9
==============================================================================
restarts              : 1
conflicts             : 2              (250 /sec)
decisions             : 1520           (190000 /sec)
propagations          : 6166           (770750 /sec)
conflict literals     : 5              (0.00 % deleted)
Memory used           : 263.86 MB
CPU time              : 0.008 s

SATISFIABLE
PARALLEL: process 0 finished early. Telling everyone else now....
PARALLEL: process 0 finished early. Done telling everyone else.
restarts              : 1
conflicts             : 7              (583 /sec)
decisions             : 1446           (120500 /sec)
propagations          : 6409           (534083 /sec)
conflict literals     : 34             (0.00 % deleted)
Memory used           : 263.86 MB
CPU time              : 0.012 s

SATISFIABLE
PARALLEL: process 3 finished early. Telling everyone else now....
PARALLEL: process 3 finished early. Done telling everyone else.
nts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: learnts.size()=4
PARALLEL[1]: there is a learnt of size 32 bytes to receive from process 3
PARALLEL[1]: Done receiving one learnts of size 32 from process 3 (1 so far this time)
PARALLEL[1]: learnts.size()=5
PARALLEL[1]: there is a learnt of size 20 bytes to receive from process 3
PARALLEL[1]: Done receiving one learnts of size 20 from process 3 (1 so far this time)
PARALLEL[1]: learnts.size()=6
PARALLEL[1]: there is a learnt of size 28 bytes to receive from process 3
PARALLEL[1]: Done receiving one learnts of size 28 from process 3 (1 so far this time)
PARALLEL[1]: learnts.size()=7
PARALLEL[1]: there is a learnt of size 32 bytes to receive from process 3
PARALLEL[1]: Done receiving one learnts of size 32 from process 3 (1 so far this time)
PARALLEL[1]: learnts.size()=8
PARALLEL[1]: there is a learnt of size 28 bytes to receive from process 3
PARALLEL[1]: Done receiving one learnts of size 28 from process 3 (1 so far this time)
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
nts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: learnts.size()=4
PARALLEL[2]: there is a learnt of size 32 bytes to receive from process 3
PARALLEL[2]: Done receiving one learnts of size 32 from process 3 (1 so far this time)
PARALLEL[2]: learnts.size()=5
PARALLEL[2]: there is a learnt of size 20 bytes to receive from process 3
PARALLEL[2]: Done receiving one learnts of size 20 from process 3 (1 so far this time)
PARALLEL[2]: learnts.size()=6
PARALLEL[2]: there is a learnt of size 28 bytes to receive from process 3
PARALLEL[2]: Done receiving one learnts of size 28 from process 3 (1 so far this time)
PARALLEL[2]: learnts.size()=7
PARALLEL[2]: there is a learnt of size 32 bytes to receive from process 3
PARALLEL[2]: Done receiving one learnts of size 32 from process 3 (1 so far this time)
PARALLEL[2]: learnts.size()=8
PARALLEL[2]: there is a learnt of size 28 bytes to receive from process 3
PARALLEL[2]: Done receiving one learnts of size 28 from process 3 (1 so far this time)
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=9
PARALLEL[2]: learnts.size()=10
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[9] to process 0, which contains 12 literals (52 bytes)
PARALLEL[2] sending out learnts[9] to process 1, which contains 12 literals (52 bytes)
PARALLEL[2] sending out learnts[9] to process 3, which contains 12 literals (52 bytes)
PARALLEL[2]: DONE sending out my 10 learnts.
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: learnts.size()=9
PARALLEL[1]: there is a learnt of size 52 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 52 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=11
PARALLEL[1]: I have 1 learnts to send out to everyone now...
PARALLEL[1] sending out learnts[10] to process 0, which contains 6 literals (28 bytes)
PARALLEL[1] sending out learnts[10] to process 2, which contains 6 literals (28 bytes)
PARALLEL[1] sending out learnts[10] to process 3, which contains 6 literals (28 bytes)
PARALLEL[1]: DONE sending out my 11 learnts.
PARALLEL[2]: learnts.size()=11
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[10] to process 0, which contains 6 literals (28 bytes)
PARALLEL[2] sending out learnts[10] to process 1, which contains 6 literals (28 bytes)
PARALLEL[2] sending out learnts[10] to process 3, which contains 6 literals (28 bytes)
PARALLEL[2]: DONE sending out my 11 learnts.
PARALLEL[2]: learnts.size()=11
PARALLEL[2]: learnts.size()=11
PARALLEL[2]: there is a learnt of size 28 bytes to receive from process 1
PARALLEL[2]: Done receiving one learnts of size 28 from process 1 (1 so far this time)
PARALLEL[2]: learnts.size()=12
PARALLEL[2]: learnts.size()=12
PARALLEL[2]: learnts.size()=12
PARALLEL[2]: learnts.size()=12
PARALLEL[1]: learnts.size()=11
PARALLEL[1]: there is a learnt of size 28 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 28 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=12
PARALLEL[1]: learnts.size()=12
PARALLEL[1]: learnts.size()=12
PARALLEL[1]: there is a learnt of size 44 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 44 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=13
PARALLEL[2]: learnts.size()=12
PARALLEL[2]: learnts.size()=12
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[12] to process 0, which contains 10 literals (44 bytes)
PARALLEL[2] sending out learnts[12] to process 1, which contains 10 literals (44 bytes)
PARALLEL[2] sending out learnts[12] to process 3, which contains 10 literals (44 bytes)
PARALLEL[2]: DONE sending out my 13 learnts.
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=13
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: I have 1 learnts to send out to everyone now...
PARALLEL[1] sending out learnts[13] to process 0, which contains 8 literals (36 bytes)
PARALLEL[1] sending out learnts[13] to process 2, which contains 8 literals (36 bytes)
PARALLEL[1] sending out learnts[13] to process 3, which contains 8 literals (36 bytes)
PARALLEL[1]: DONE sending out my 14 learnts.
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: learnts.size()=13
PARALLEL[2]: there is a learnt of size 36 bytes to receive from process 1
PARALLEL[2]: Done receiving one learnts of size 36 from process 1 (1 so far this time)
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=1PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: learnts.size()=14
PARALLEL[1]: there is a learnt of size 16 bytes to receive from process 2
PARALLEL[1]: Done receiving one learnts of size 16 from process 2 (1 so far this time)
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
4
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=14
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: I have 1 learnts to send out to everyone now...
PARALLEL[2] sending out learnts[14] to process 0, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[14] to process 1, which contains 3 literals (16 bytes)
PARALLEL[2] sending out learnts[14] to process 3, which contains 3 literals (16 bytes)
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[2]: DONE sending out my 15 learnts.
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PAPARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
RALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARAPARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
LLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLELPARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[1]: learnts.size()=15
PARALLEL[777]: learnts.size()=15
==============================================================================
restarts              : 1
conflicts             : 5              (625 /sec)
decisions             : 1131           (141375 /sec)
propagations          : 4894           (611750 /sec)
conflict literals     : 23             (0.00 % deleted)
Memory used           : 263.86 MB
CPU time              : 0.008 s

SATISFIABLE
PARALLEL: process 1 finished early. Telling everyone else now....
PARALLEL: process 1 finished early. Done telling everyone else.
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[2]: learnts.size()=15
PARALLEL[777]: learnts.size()=15
==============================================================================
restarts              : 1
conflicts             : 6              (500 /sec)
decisions             : 1317           (109750 /sec)
propagations          : 5547           (462250 /sec)
conflict literals     : 38             (0.00 % deleted)
Memory used           : 263.86 MB
CPU time              : 0.012 s

SATISFIABLE
PARALLEL: process 2 finished early. Telling everyone else now....
PARALLEL: process 2 finished early. Done telling everyone else.
