
SIM_ROOT ?= $(CURDIR)/../

OS_SERVICES_ROOT = $(SIM_ROOT)/os-services-25032-gcc.4.0.0-linux-ia32_intel64
BOOST_ROOT = /afs/csail/group/carbon/tools/boost_1_38_0

BUILD_32 = 1

# MPI Support
MPI_DIR = /afs/csail/group/carbon/tools/mpich2-1.0.8/install
export LD_LIBRARY_PATH := $(BOOST_ROOT)/install/lib:$(MPI_DIR)/lib:$(LD_LIBRARY_PATH)
CC = $(MPI_DIR)/bin/mpicc
CXX = $(MPI_DIR)/bin/mpicxx

# OS Services Support
LD_LIBS += -los-services
ifeq ($(BUILD_32),1)
  CXXFLAGS += -I$(OS_SERVICES_ROOT)/include-ia32
  LD_FLAGS += -los-services -L $(OS_SERVICES_ROOT)/ia32 -m32
else
  CXXFLAGS += -I$(OS_SERVICES_ROOT)/include-intel64
  LD_FLAGS += -los-services -L $(OS_SERVICES_ROOT)/intel64
endif

# Boost Support
CXXFLAGS += -I$(BOOST_ROOT)
BOOST_SUFFIX = gcc41-mt-1_38
LD_FLAGS += -L$(BOOST_ROOT)/stage/lib -L../../lib
#LD_FLAGS += -L$(BOOST_ROOT)/stage_static -L$(SIM_ROOT)/lib
LD_LIBS += -lboost_filesystem-$(BOOST_SUFFIX) -lboost_system-$(BOOST_SUFFIX) -pthread
export LD_LIBRARY_PATH := $(SIM_ROOT)/lib:$(LD_LIBRARY_PATH)

CXXFLAGS += -I$(SIM_ROOT)/common/user -I$(SIM_ROOT)/common/core -I$(SIM_ROOT)/common/system \
				-I$(SIM_ROOT)/common/network -I$(SIM_ROOT)/common/transport -I$(SIM_ROOT)/common/misc \
				-I$(SIM_ROOT)/common/config

# Build rules for dependency generation
%.d: %.cpp
	$(CXX) -MM -MG $(CXXFLAGS) $< | sed -e 's,^\([^:]*\)\.o[ ]*:,$(@D)/\1.o $(@D)/\1.d:,' >$@

%.d: %.cc
	$(CXX) -MM -MG $(CXXFLAGS) $< | sed -e 's,^\([^:]*\)\.o[ ]*:,$(@D)/\1.o $(@D)/\1.d:,' >$@

%.d: %.c
	$(CC) -MM -MG $(CFLAGS) $< | sed -e 's,^\([^:]*\)\.o[ ]*:,$(@D)/\1.o $(@D)/\1.d:,' >$@

ifneq ($(MAKECMDGOALS),clean)
include $(OBJECTS:%.o=%.d)
endif

# Build rules for object generation
%.o : %.cpp
	$(CXX) $(CXXFLAGS) -o $@ $<

%.o : %.cc
	$(CXX) $(CXXFLAGS) -o $@ $<

%.o : %.c
	$(CC) $(CFLAGS) -c -o $@ $<

# targets
all: $(OBJECTS)

clean:
	-rm -f *.o *.d

